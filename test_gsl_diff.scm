(use-modules (gsl diff))
(use-modules (gsl function))
(use-modules (ice-9 format))

(define (f x)
  (expt x 1.5))
(define (df x)
  (* 1.5 (sqrt x)))
(define (cout . args)
  (let ((stdout (current-output-port)))
    (apply format stdout args)))

(let ((gsl-f (gsl-function-alloc f)))
  (display "f(x) = x^(3/2)\n")

  (let ((x 2.0)
	(stdout (current-output-port)))
    (call-with-values (lambda () (gsl-diff-central gsl-f x))
		      (lambda (errno result abserr)
			(cout "x = ~F\n" x)
			(cout "f'(x) = ~10F +/- ~5F\n" result abserr)
			(cout "exact = ~10F\n\n" (df x)))))

  (let ((x 0.0)
	(stdout (current-output-port)))
    (call-with-values (lambda () (gsl-diff-forward gsl-f x))
		      (lambda (errno result abserr)
			(cout "x = ~F\n" x)
			(cout "f'(x) = ~10F +/- ~5F\n" result abserr)
			(cout "exact = ~10F\n\n" (df x)))))
  (gsl-function-free gsl-f))
