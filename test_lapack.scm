(use-modules (lapack lapack))

(display "Testing dgesv\n")
(let ((A #2i((-1.0  1.0 2.0)
	     ( 3.0 -1.0 1.0)
	     (-1.0  3.0 4.0)))
      (B #2i((1.0 0.0)
	     (0.0 1.0)
	     (0.0 0.0))))
  (call-with-values (lambda () (dgesv A B))
		    (lambda (x lu p)
		      (display x) (newline)
		      (display lu) (newline)
		      (display p) (newline))))
(newline)

(display "Testing zgesv\n")
(let ((A #2c((-1.0  1.0 2.0)
	     ( 3.0  0-i 1.0)
	     (-1.0  3.0 4.0)))
      (B #2c((1.0 0.0)
	     (0.0 1.0)
	     (0.0 0.0))))
  (call-with-values (lambda () (zgesv A B))
		    (lambda (x lu p)
		      (display x) (newline)
		      (display lu) (newline)
		      (display p) (newline))))
(newline)

(display "Testing dgels\n")
(let ((A #2i((-1.0  1.0)
	     ( 3.0 -1.0)
	     (-1.0  3.0)))
      (B #2i((1.0 0.0)
	     (0.0 1.0)
	     (0.0 0.0)))
      (trans 0))
  (call-with-values (lambda () (dgels trans A B))
		    (lambda (x lq)
		      (display "X:  ") (display x) (newline)
		      (display "LQ: ") (display lq) (newline))))
(newline)

(display "Testing zgels\n")
(let ((A #2c((-1.0  1.0)
	     ( 3.0  0-i)
	     (-1.0  3.0)))
      (B #2c((1.0 0.0)
	     (0.0 0+i)
	     (0.0 0.0)))
      (trans 0))
  (call-with-values (lambda () (zgels trans A B))
		    (lambda (x lq)
		      (display "X:  ") (display x) (newline)
		      (display "LQ: ") (display lq) (newline))))
(newline)
